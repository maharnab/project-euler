# -*- coding: utf-8 -*-
"""
Created on Sun Sep 18 03:42:42 2016

@author: Maharnab

The sequence of triangle numbers is generated by adding the natural numbers.
What is the value of the first triangle number 
to have over five hundred divisors?
"""

#import time
#import math
#
#start_time = time.time()

#i = 1
#a = []
#while True:
#    div = []
#
#    for j in xrange(1, i):
#        a.append(j)
#        b = sum(a)
#        for k in range(1, b + 1):
#            if b % k == 0:
#                div.append(k)
#    
#    print i
#    if len(div) > 50:
#        print div, len(div)
#        break
#    i += 1

#i = 2
#b = 1
#m = 1
#while m < 5:
##    a.append(b)
#    
#    m = 1
#    for k in xrange(1, int(math.sqrt(b))):
#        if b % k == 0:
#            m += 1
#    print b, m
#    b = b + i
#    i += 1
#    
##print div
#print("--- %s seconds ---" % (time.time() - start_time))

import math
import timing
def factorCount (n):
    square = math.sqrt (n)
    isquare = int (square)
    count = -1 if isquare == square else 0
    for candidate in range (1, isquare + 1):
        if not n % candidate: count += 2
            
#    print count
    return count

triangle = 1
index = 1
while factorCount (triangle) < 500:
    index += 1
    triangle += index

print (triangle)